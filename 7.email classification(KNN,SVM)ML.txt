import warnings
 warnings.filterwarnings('ignore')
 import numpy as np
 import pandas as pd
 import seaborn as sns
 import matplotlib.pyplot as plt
 from sklearn.metrics import accuracy_score
 from sklearn.metrics import precision_score, recall_score, f1_score,roc_auc_score
 from sklearn.metrics import confusion_matrix

 data = pd.read_csv("emails.csv")
 data

data.info()

data.head()

data.tail()

data.shape

data.describe()

data.dtypes

data.isnull().sum()

#For null column
 null_counts = data.isnull().sum()
 columns_with_nulls = null_counts[null_counts >= 1]
 columns_with_nulls

 # Remove Email no. column
 x = data.iloc[:,1:3001]
 x.head()

 # Output Class
 y = data.iloc[:,-1]
 y.head()

 # Output Class
 y = data.iloc[:,-1]
 y.head()

 fromsklearn.preprocessing import StandardScaler
 sc = StandardScaler()
 x_train = sc.fit_transform(x_train)
 x_test = sc.fit_transform(x_test)

 #K-NN classifier
 from sklearn.neighborsimportKNeighborsClassifier
 knn= KNeighborsClassifier(n_neighbors=5, metric='minkowski', p=2 )
 knn.fit(x_train,y_train)

 y_pred_knn = knn.predict(x_test)
 y_pred_knn

 cm = confusion_matrix(y_test, y_pred_knn)
 cm

 #Confusion matrix
 sns.heatmap(cm, annot=True, fmt='.2f', cmap='Reds')
 plt.xlabel('Predicted')
 plt.ylabel('True')
 plt.title('Confusion Matrix')
 plt.show()

 #Accuracy Score
 accuracy_score(y_test, y_pred_knn)

 #Support Vector Machine
 from sklearn.svm import SVC
 svc = SVC(kernel='linear', random_state=0)
 svc.fit(x_train, y_train)
 
y_pred_svc = svc.predict(x_test)
 y_pred_svc
 
 cm = confusion_matrix(y_test, y_pred_svc)
 cm

  # Confusion matrix
 sns.heatmap(cm, annot=True, fmt='.2f', cmap='Reds')
 plt.xlabel('Predicted')
 plt.ylabel('True')
 plt.title('Confusion Matrix')
 plt.show()

#Accuracy score
 accuracy_score(y_test, y_pred_svc)